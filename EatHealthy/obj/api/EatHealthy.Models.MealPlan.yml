### YamlMime:ManagedReference
items:
- uid: EatHealthy.Models.MealPlan
  commentId: T:EatHealthy.Models.MealPlan
  id: MealPlan
  parent: EatHealthy.Models
  children:
  - EatHealthy.Models.MealPlan.ID
  - EatHealthy.Models.MealPlan.MealPlanDays
  - EatHealthy.Models.MealPlan.Patient
  langs:
  - csharp
  - vb
  name: MealPlan
  nameWithType: MealPlan
  fullName: EatHealthy.Models.MealPlan
  type: Class
  source:
    remote:
      path: D:/documente scoala/Facultate/Anul 3/Sem2/SD/EatHealthy/EatHealthy/Models/MealPlan.cs
    id: MealPlan
    path: Models/MealPlan.cs
    startLine: 7
  assemblies:
  - EatHealthy
  namespace: EatHealthy.Models
  syntax:
    content: public class MealPlan
    content.vb: Public Class MealPlan
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EatHealthy.Models.MealPlan.ID
  commentId: P:EatHealthy.Models.MealPlan.ID
  id: ID
  parent: EatHealthy.Models.MealPlan
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: MealPlan.ID
  fullName: EatHealthy.Models.MealPlan.ID
  type: Property
  source:
    remote:
      path: D:/documente scoala/Facultate/Anul 3/Sem2/SD/EatHealthy/EatHealthy/Models/MealPlan.cs
    id: ID
    path: Models/MealPlan.cs
    startLine: 9
  assemblies:
  - EatHealthy
  namespace: EatHealthy.Models
  syntax:
    content: public int ID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ID As Integer
  overload: EatHealthy.Models.MealPlan.ID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EatHealthy.Models.MealPlan.MealPlanDays
  commentId: P:EatHealthy.Models.MealPlan.MealPlanDays
  id: MealPlanDays
  parent: EatHealthy.Models.MealPlan
  langs:
  - csharp
  - vb
  name: MealPlanDays
  nameWithType: MealPlan.MealPlanDays
  fullName: EatHealthy.Models.MealPlan.MealPlanDays
  type: Property
  source:
    remote:
      path: D:/documente scoala/Facultate/Anul 3/Sem2/SD/EatHealthy/EatHealthy/Models/MealPlan.cs
    id: MealPlanDays
    path: Models/MealPlan.cs
    startLine: 10
  assemblies:
  - EatHealthy
  namespace: EatHealthy.Models
  syntax:
    content: public List<MealPlanDay> MealPlanDays { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{EatHealthy.Models.MealPlanDay}
    content.vb: Public Property MealPlanDays As List(Of MealPlanDay)
  overload: EatHealthy.Models.MealPlan.MealPlanDays*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EatHealthy.Models.MealPlan.Patient
  commentId: P:EatHealthy.Models.MealPlan.Patient
  id: Patient
  parent: EatHealthy.Models.MealPlan
  langs:
  - csharp
  - vb
  name: Patient
  nameWithType: MealPlan.Patient
  fullName: EatHealthy.Models.MealPlan.Patient
  type: Property
  source:
    remote:
      path: D:/documente scoala/Facultate/Anul 3/Sem2/SD/EatHealthy/EatHealthy/Models/MealPlan.cs
    id: Patient
    path: Models/MealPlan.cs
    startLine: 11
  assemblies:
  - EatHealthy
  namespace: EatHealthy.Models
  syntax:
    content: public Patient Patient { get; set; }
    parameters: []
    return:
      type: EatHealthy.Models.Patient
    content.vb: Public Property Patient As Patient
  overload: EatHealthy.Models.MealPlan.Patient*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EatHealthy.Models
  commentId: N:EatHealthy.Models
  name: EatHealthy.Models
  nameWithType: EatHealthy.Models
  fullName: EatHealthy.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EatHealthy.Models.MealPlan.ID*
  commentId: Overload:EatHealthy.Models.MealPlan.ID
  name: ID
  nameWithType: MealPlan.ID
  fullName: EatHealthy.Models.MealPlan.ID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EatHealthy.Models.MealPlan.MealPlanDays*
  commentId: Overload:EatHealthy.Models.MealPlan.MealPlanDays
  name: MealPlanDays
  nameWithType: MealPlan.MealPlanDays
  fullName: EatHealthy.Models.MealPlan.MealPlanDays
- uid: System.Collections.Generic.List{EatHealthy.Models.MealPlanDay}
  commentId: T:System.Collections.Generic.List{EatHealthy.Models.MealPlanDay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MealPlanDay>
  nameWithType: List<MealPlanDay>
  fullName: System.Collections.Generic.List<EatHealthy.Models.MealPlanDay>
  nameWithType.vb: List(Of MealPlanDay)
  fullName.vb: System.Collections.Generic.List(Of EatHealthy.Models.MealPlanDay)
  name.vb: List(Of MealPlanDay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EatHealthy.Models.MealPlanDay
    name: MealPlanDay
    nameWithType: MealPlanDay
    fullName: EatHealthy.Models.MealPlanDay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EatHealthy.Models.MealPlanDay
    name: MealPlanDay
    nameWithType: MealPlanDay
    fullName: EatHealthy.Models.MealPlanDay
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EatHealthy.Models.MealPlan.Patient*
  commentId: Overload:EatHealthy.Models.MealPlan.Patient
  name: Patient
  nameWithType: MealPlan.Patient
  fullName: EatHealthy.Models.MealPlan.Patient
- uid: EatHealthy.Models.Patient
  commentId: T:EatHealthy.Models.Patient
  parent: EatHealthy.Models
  name: Patient
  nameWithType: Patient
  fullName: EatHealthy.Models.Patient
