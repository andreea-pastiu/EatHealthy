### YamlMime:ManagedReference
items:
- uid: EatHealthy.Services.FoodDiaryService
  commentId: T:EatHealthy.Services.FoodDiaryService
  id: FoodDiaryService
  parent: EatHealthy.Services
  children:
  - EatHealthy.Services.FoodDiaryService.#ctor(EatHealthy.EatHealthyContext)
  - EatHealthy.Services.FoodDiaryService.Add(System.Int32,System.DateTime,System.String)
  - EatHealthy.Services.FoodDiaryService.GetFoodDiary(System.Int32)
  langs:
  - csharp
  - vb
  name: FoodDiaryService
  nameWithType: FoodDiaryService
  fullName: EatHealthy.Services.FoodDiaryService
  type: Class
  source:
    remote:
      path: D:/documente scoala/Facultate/Anul 3/Sem2/SD/EatHealthy/EatHealthy/Services/FoodDiaryService.cs
    id: FoodDiaryService
    path: Services/FoodDiaryService.cs
    startLine: 8
  assemblies:
  - EatHealthy
  namespace: EatHealthy.Services
  syntax:
    content: public class FoodDiaryService
    content.vb: Public Class FoodDiaryService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EatHealthy.Services.FoodDiaryService.#ctor(EatHealthy.EatHealthyContext)
  commentId: M:EatHealthy.Services.FoodDiaryService.#ctor(EatHealthy.EatHealthyContext)
  id: '#ctor(EatHealthy.EatHealthyContext)'
  parent: EatHealthy.Services.FoodDiaryService
  langs:
  - csharp
  - vb
  name: FoodDiaryService(EatHealthyContext)
  nameWithType: FoodDiaryService.FoodDiaryService(EatHealthyContext)
  fullName: EatHealthy.Services.FoodDiaryService.FoodDiaryService(EatHealthy.EatHealthyContext)
  type: Constructor
  source:
    remote:
      path: D:/documente scoala/Facultate/Anul 3/Sem2/SD/EatHealthy/EatHealthy/Services/FoodDiaryService.cs
    id: .ctor
    path: Services/FoodDiaryService.cs
    startLine: 12
  assemblies:
  - EatHealthy
  namespace: EatHealthy.Services
  syntax:
    content: public FoodDiaryService(EatHealthyContext context)
    parameters:
    - id: context
      type: EatHealthy.EatHealthyContext
    content.vb: Public Sub New(context As EatHealthyContext)
  overload: EatHealthy.Services.FoodDiaryService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EatHealthy.Services.FoodDiaryService.Add(System.Int32,System.DateTime,System.String)
  commentId: M:EatHealthy.Services.FoodDiaryService.Add(System.Int32,System.DateTime,System.String)
  id: Add(System.Int32,System.DateTime,System.String)
  parent: EatHealthy.Services.FoodDiaryService
  langs:
  - csharp
  - vb
  name: Add(Int32, DateTime, String)
  nameWithType: FoodDiaryService.Add(Int32, DateTime, String)
  fullName: EatHealthy.Services.FoodDiaryService.Add(System.Int32, System.DateTime, System.String)
  type: Method
  source:
    remote:
      path: D:/documente scoala/Facultate/Anul 3/Sem2/SD/EatHealthy/EatHealthy/Services/FoodDiaryService.cs
    id: Add
    path: Services/FoodDiaryService.cs
    startLine: 24
  assemblies:
  - EatHealthy
  namespace: EatHealthy.Services
  summary: "\nAdds a new entry to the food diary of a patient\n"
  example: []
  syntax:
    content: public FoodDiary Add(int patientId, DateTime mealDate, string diary)
    parameters:
    - id: patientId
      type: System.Int32
      description: Id of the patient performing the request
    - id: mealDate
      type: System.DateTime
      description: Date of the meal
    - id: diary
      type: System.String
      description: Details about the meal
    return:
      type: EatHealthy.Models.FoodDiary
      description: The newly added entry to the food diary
    content.vb: Public Function Add(patientId As Integer, mealDate As Date, diary As String) As FoodDiary
  overload: EatHealthy.Services.FoodDiaryService.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EatHealthy.Services.FoodDiaryService.GetFoodDiary(System.Int32)
  commentId: M:EatHealthy.Services.FoodDiaryService.GetFoodDiary(System.Int32)
  id: GetFoodDiary(System.Int32)
  parent: EatHealthy.Services.FoodDiaryService
  langs:
  - csharp
  - vb
  name: GetFoodDiary(Int32)
  nameWithType: FoodDiaryService.GetFoodDiary(Int32)
  fullName: EatHealthy.Services.FoodDiaryService.GetFoodDiary(System.Int32)
  type: Method
  source:
    remote:
      path: D:/documente scoala/Facultate/Anul 3/Sem2/SD/EatHealthy/EatHealthy/Services/FoodDiaryService.cs
    id: GetFoodDiary
    path: Services/FoodDiaryService.cs
    startLine: 46
  assemblies:
  - EatHealthy
  namespace: EatHealthy.Services
  summary: "\nGets all the food diary entries of a patient\n"
  example: []
  syntax:
    content: public List<FoodDiary> GetFoodDiary(int patientId)
    parameters:
    - id: patientId
      type: System.Int32
      description: Id of the patient performing the request
    return:
      type: System.Collections.Generic.List{EatHealthy.Models.FoodDiary}
      description: All the food diary entris of a patient
    content.vb: Public Function GetFoodDiary(patientId As Integer) As List(Of FoodDiary)
  overload: EatHealthy.Services.FoodDiaryService.GetFoodDiary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EatHealthy.Services
  commentId: N:EatHealthy.Services
  name: EatHealthy.Services
  nameWithType: EatHealthy.Services
  fullName: EatHealthy.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EatHealthy.Services.FoodDiaryService.#ctor*
  commentId: Overload:EatHealthy.Services.FoodDiaryService.#ctor
  name: FoodDiaryService
  nameWithType: FoodDiaryService.FoodDiaryService
  fullName: EatHealthy.Services.FoodDiaryService.FoodDiaryService
- uid: EatHealthy.EatHealthyContext
  commentId: T:EatHealthy.EatHealthyContext
  parent: EatHealthy
  name: EatHealthyContext
  nameWithType: EatHealthyContext
  fullName: EatHealthy.EatHealthyContext
- uid: EatHealthy
  commentId: N:EatHealthy
  name: EatHealthy
  nameWithType: EatHealthy
  fullName: EatHealthy
- uid: EatHealthy.Services.FoodDiaryService.Add*
  commentId: Overload:EatHealthy.Services.FoodDiaryService.Add
  name: Add
  nameWithType: FoodDiaryService.Add
  fullName: EatHealthy.Services.FoodDiaryService.Add
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EatHealthy.Models.FoodDiary
  commentId: T:EatHealthy.Models.FoodDiary
  parent: EatHealthy.Models
  name: FoodDiary
  nameWithType: FoodDiary
  fullName: EatHealthy.Models.FoodDiary
- uid: EatHealthy.Models
  commentId: N:EatHealthy.Models
  name: EatHealthy.Models
  nameWithType: EatHealthy.Models
  fullName: EatHealthy.Models
- uid: EatHealthy.Services.FoodDiaryService.GetFoodDiary*
  commentId: Overload:EatHealthy.Services.FoodDiaryService.GetFoodDiary
  name: GetFoodDiary
  nameWithType: FoodDiaryService.GetFoodDiary
  fullName: EatHealthy.Services.FoodDiaryService.GetFoodDiary
- uid: System.Collections.Generic.List{EatHealthy.Models.FoodDiary}
  commentId: T:System.Collections.Generic.List{EatHealthy.Models.FoodDiary}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FoodDiary>
  nameWithType: List<FoodDiary>
  fullName: System.Collections.Generic.List<EatHealthy.Models.FoodDiary>
  nameWithType.vb: List(Of FoodDiary)
  fullName.vb: System.Collections.Generic.List(Of EatHealthy.Models.FoodDiary)
  name.vb: List(Of FoodDiary)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EatHealthy.Models.FoodDiary
    name: FoodDiary
    nameWithType: FoodDiary
    fullName: EatHealthy.Models.FoodDiary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EatHealthy.Models.FoodDiary
    name: FoodDiary
    nameWithType: FoodDiary
    fullName: EatHealthy.Models.FoodDiary
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
